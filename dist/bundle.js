(()=>{var t={827:()=>{AFRAME.registerComponent("emit-when-near",{schema:{target:{type:"selector",default:"#camera-rig"},distance:{type:"number",default:1},event:{type:"string",default:"click"},eventFar:{type:"string",default:"unclick"},throttle:{type:"number",default:100}},init:function(){this.tick=AFRAME.utils.throttleTick(this.checkDist,this.data.throttle,this),this.emiting=!1},checkDist:function(){let t=new THREE.Vector3(0,0,0),e=new THREE.Vector3(0,0,0);if(this.el.object3D.getWorldPosition(t),this.data.target.object3D.getWorldPosition(e),t.distanceTo(e)<=this.data.distance){if(this.emiting)return;this.emiting=!0,this.el.emit(this.data.event,{collidingEntity:this.data.target},!1),this.data.target.emit(this.data.event,{collidingEntity:this.el},!1)}else{if(!this.emiting)return;this.el.emit(this.data.eventFar,{collidingEntity:this.data.target},!1),this.data.target.emit(this.data.eventFar,{collidingEntity:this.el},!1),this.emiting=!1}}})},120:()=>{AFRAME.registerComponent("on-event-set",{multiple:!0,schema:{event:{type:"string",default:"click"},attribute:{type:"string"},value:{type:"string"}},init:function(){this._onEvent=this._onEvent.bind(this),this.el.addEventListener(this.data.event,this._onEvent)},remove:function(){this.el.removeEventListener(this.data.event,this._onEvent)},_onEvent:function(t){AFRAME.utils.entity.setComponentProperty(this.el,this.data.attribute,this.data.value)}})}},e={};function i(n){var a=e[n];if(void 0!==a)return a.exports;var s=e[n]={exports:{}};return t[n](s,s.exports,i),s.exports}i.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return i.d(e,{a:e}),e},i.d=(t,e)=>{for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";i(827),i(120)})()})();
